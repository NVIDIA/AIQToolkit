---
description:
globs:
alwaysApply: false
---
# Global Rule Enforcement and Application

This rule ensures that the Cursor Chat agent proactively discovers, evaluates, and applies relevant workspace rules based on user queries, regardless of mode.

## Core Principle

**ALWAYS** check for and apply relevant rules when responding to user requests, even if the request doesn't explicitly mention rules or seem code-related.

## Rule Discovery Process

### 1. Automatic Rule Assessment
For **EVERY** user query, the agent must:
- Evaluate if the query could benefit from existing workspace rules
- Check rule descriptions to identify potentially relevant rules
- Use the `fetch_rules` tool when rule application would improve the response

### 2. Proactive Rule Application
The agent should apply rules proactively when:
- User requests involve workflow management, creation, or modification
- User asks about project-specific processes or procedures
- User requests could be enhanced by following established guidelines
- Any mention of AIQ toolkit functionality or commands
- Tasks that involve code generation, project structure, or best practices

### 3. Rule Fetching Strategy
Use `fetch_rules` tool when:
- User query mentions keywords that match rule names (e.g., "workflow", "eval", "run", "serve")
- User asks "how to" questions about project-specific functionality
- User requests involve creating, modifying, or managing project components
- Uncertainty exists about the correct approach for a project-specific task

## Available Rule Categories

The agent should be aware of these rule categories and fetch them as appropriate:

### AIQ Toolkit Rules
- **aiq-workflow-management**: Workflow creation, installation, and deletion commands
- **aiq-eval**: Evaluation and testing procedures
- **aiq-info**: Information gathering and debugging
- **aiq-run-serve**: Running and serving workflows

### Project Management Rules
- **cursor-rules**: Guidelines for adding and editing Cursor rules

## Implementation Guidelines

### Behavioral Requirements
1. **Proactive Rule Checking**: Don't wait for explicit rule requests
2. **Context-Aware Application**: Apply rules based on task context, not just keywords
3. **Multi-Rule Coordination**: Consider multiple rules when they're relevant to a single query
4. **User Experience**: Apply rules seamlessly without overwhelming the user with rule details

### Examples of Automatic Rule Application

```bash
# User Query: "Create a new workflow for document processing"
# Auto-apply: aiq-workflow-management rule
# Action: Fetch rule and use proper `aiq workflow create` commands

# User Query: "How do I test my workflow?"
# Auto-apply: aiq-eval rule
# Action: Fetch rule and provide evaluation procedures

# User Query: "I want to add a new rule for the team"
# Auto-apply: cursor-rules rule
# Action: Fetch rule and follow proper rule creation guidelines
```

### Rule Fetching Decision Tree
```
User Query → Contains AIQ keywords? → YES → Fetch relevant AIQ rules
            ↓
            NO → Task involves project processes? → YES → Fetch relevant process rules
            ↓
            NO → Could benefit from guidelines? → YES → Fetch applicable rules
            ↓
            NO → Proceed without additional rules
```

## Quality Assurance

### Success Criteria
- Relevant rules are identified and applied without user prompting
- User receives accurate, guideline-compliant responses
- Workflow efficiency improves through proper rule application
- Reduced need for follow-up clarifications

### Monitoring
- Track instances where rules should have been applied but weren't
- Ensure rule application enhances rather than complicates responses
- Verify that rule fetching improves task completion accuracy

## Override Conditions

This global rule can be temporarily overridden when:
- User explicitly requests a non-standard approach
- Emergency or experimental situations require rule deviation
- Rule application would significantly delay critical responses

**Remember**: The goal is to make rule application seamless and automatic, enhancing the user experience by leveraging project-specific knowledge and guidelines without requiring explicit rule requests.
